// config.js
// Extracted from original app.js header for auth/URLs/feature flags
// NOTE: Review and prune as needed.
/**\n * Azure Broadcast App - Main Application v2.5\n * FINAL: Aggressive anti-loop + Audio enabled for videos\n */\n\nconsole.log('üöÄ Loading Azure Broadcast App v2.5 - NO LOOP + AUDIO');\n\nconst msalConfig = {\n    auth: {\n        clientId: 'e7174676-e8bb-446b-9260-af3f28086458',\n        authority: 'https://login.microsoftonline.com/common',\n        redirectUri: window.location.origin\n    },\n    cache: {\n        cacheLocation: 'localStorage',\n        storeAuthStateInCookie: false\n    }\n};\n\nconst dataverseConfig = {\n    webApiEndpoint: 'https://beredskap360utv.api.crm4.dynamics.com/api/data/v9.2',\n    environmentId: 'd17c0905-0627-e2c7-991f-02c12daadd44',\n    organizationId: '2061523f-6d02-f011-b015-0022489e5943',\n    tablePrefix: 'powerai_'\n};\n\nlet msalInstance;\n\ntry {\n    if (typeof msal !== 'undefined' && msal.PublicClientApplication) {\n        msalInstance = new msal.PublicClientApplication(msalConfig);\n        console.log('‚úÖ MSAL instance created successfully (v2.5)');\n    } else {\n        console.error('‚ùå MSAL library not properly loaded');\n    }\n} catch (error) {\n    console.error('‚ùå Failed to create MSAL instance:', error);\n}\n\nclass AzureBroadcastApp {\n    constructor() {\n        console.log('üé¨ Initializing AzureBroadcastApp v2.5 - NO LOOP + AUDIO...');\n        \n        if (!msalInstance) {\n            throw new Error('MSAL instance not available. Cannot initialize app.');\n        }\n        \n        this.accessToken = null;\n        this.currentUser = null;\n        this.broadcastSchedule = [];\n        this.currentProgramIndex = 0;\n        this.isPlayingVideo = false;\n        this.videoProgressInterval = null;\n        this.scheduleCheckInterval = null;\n        this.nextBroadcastTime = null;\n        this.lastScheduleUpdate = null;\n        this.lastNewsUpdate = null;\n        this.retryCount = 0;\n        this.maxRetries = 3;\n        this.currentVideoTimeout = null;\n        this.programEndTimeout = null;\n        this.newsTableExists = false;\n        this.programEndedManually = false; // NEW: Track manual program end\n        \n        this.programContent = {\n            weather: { \n                icon: 'üå§Ô∏è', \n                color: 'linear-gradient(135deg, #4FC3F7, #29B6F6)', \n                description: 'V√¶rvarsel for Norge',\n                subtitle: 'Oppdatert v√¶rmelding fra Meteorologisk institutt'\n            },\n            sports: { \n                icon: '‚öΩ', \n                color: 'linear-gradient(135deg, #66BB6A, #4CAF50)', \n                description: 'Sportsresultater',\n                subtitle: 'Siste nytt fra norsk og internasjonal idrett'\n            },\n            news: { \n                icon: 'üì∞', \n                color: 'linear-gradient(135deg, #FF7043, #FF5722)', \n                description: 'Siste nyheter',\n                subtitle: 'Viktige nyhetsoppdateringer fra Norge og verden'\n            },\n            traffic: { \n                icon: 'üöó', \n                color: 'linear-gradient(135deg, #FFA726, #FF9800)', \n                description: 'Trafikkinfo',\n                subtitle: 'Trafikksituasjonen i Norge akkurat n√•'\n            },\n            culture: { \n                icon: 'üé≠', \n                color: 'linear-gradient(135deg, #AB47BC, #9C27B0)', \n                description: 'Kultur og underholdning',\n                subtitle: 'Fra kunst, kultur og underholdningsbransjen'\n            }\n        };\n\n        this.newsItems = ['Azure Broadcast System v2.5 initialiseres...'];\n        this.currentNewsIndex = 0;\n        \n        this.init();\n    }\n\n    async init() {\n        try {\n            console.log('üöÄ Azure Broadcast App v2.5 starter...');\n            console.log('üé• Anti-Loop: AGGRESSIVE MODE');\n            console.log('üîä Audio: ENABLED');\n            \n            this.setupEventListeners();\n            await this.handleAuthRedirect();\n        } catch (error) {\n            console.error('‚ùå Initialization failed:', error);\n            this.handleGlobalError(error);\n        }\n    }\n\n    setupEventListeners() {\n        try {\n            const loginBtn = document.getElementById('loginBtn');\n            const logoutBtn = document.getElementById('logoutBtn');\n            \n            if (loginBtn) {\n                loginBtn.addEventListener('click', () => this.login());\n            }\n            \n            if (logoutBtn) {\n                logoutBtn.addEventListener('click', () => this.logout());\n            }\n            \n            window.addEventListener('focus', () => this.handlePageFocus());\n            window.addEventListener('blur', () => this.handlePageBlur());\n            window.addEventListener('online', () => this.handleNetworkOnline());\n            window.addEventListener('offline', () => this.handleNetworkOffline());\n            \n            console.log('‚úÖ Event listeners setup complete');\n        } catch (error) {\n            console.error('‚ùå Failed to setup event listeners:', error);\n        }\n    }\n\n    async handleAuthRedirect() {\n        try {\n            console.log('üîç Checking authentication status...');\n            const response = await msalInstance.handleRedirectPromise();\n            \n            if (response) {\n                console.log('‚úÖ Login redirect successful');\n                this.currentUser = response.account;\n                await this.initializeApp();\n            } else {\n                const accounts = msalInstance.getAllAccounts();\n                if (accounts.length > 0) {\n                    console.log('‚úÖ User already authenticated');\n                    this.currentUser = accounts[0];\n                    await this.initializeApp();\n                } else {\n                    console.log('‚ÑπÔ∏è No authenticated user found');\n                }\n            }\n        } catch (error) {\n            console.error('‚ùå Authentication error:', error);\n            this.showError('Innloggingsfeil: ' + error.message);\n        }\n    }\n\n    async login() {\n        try {\n            console.log('üîê Starting login process...');\n            this.showLoading(true);\n            \n            const loginRequest = {\n                scopes: [\n                    'https://beredskap360utv.api.crm4.dynamics.com/user_impersonation',\n                    'User.Read'\n                ],\n                prompt: 'select_account'\n            };\n\n            await msalInstance.loginRedirect(loginRequest);\n        } catch (error) {\n            console.error('‚ùå Login error:', error);\n            this.showError('Kunne ikke logge inn: ' + error.message);\n            this.showLoading(false);\n        }\n    }\n\n    async logout() {\n        try {\n            console.log('üö™ Logging out...');\n            await msalInstance.logoutRedirect({\n                postLogoutRedirectUri: window.location.origin\n            });\n        } catch (error) {\n            console.error('‚ùå Logout error:', error);\n            window.location.reload();\n        }\n    }\n\n    async initializeApp() {
export const APP_VERSION = window.broadcastAppVersion || 'v2.5-module-split';
